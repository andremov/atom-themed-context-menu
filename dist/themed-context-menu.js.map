{
  "version": 3,
  "sources": ["../src/main.ts", "../src/MenuItem.ts", "../src/Menu.ts", "../src/ThemedContextMenu.ts"],
  "sourcesContent": ["import { ThemedContextMenu } from './ThemedContextMenu';\n\nexport const TCMHandler = new ThemedContextMenu();\n\nexport function activate() {\n    TCMHandler.hijackFunction();\n}\n\nexport function deactivate() {\n    TCMHandler.releaseFunction();\n}\n", "import { ContextMenuItemInterface } from './types';\r\nimport { Menu } from './Menu';\r\n\r\n// handler for the items shown in the context menu, be it a separator or a command\r\nexport class MenuItem {\r\n    private element: HTMLHRElement | HTMLDivElement;\r\n    private command?: string;\r\n    private commandDetail?: string;\r\n    private selected: boolean = false;\r\n    private parent: Menu;\r\n    private submenuItems?: ContextMenuItemInterface[];\r\n    private submenu?: Menu;\r\n    private height: number;\r\n    private target: EventTarget | null;\r\n\r\n    private constructor(\r\n        element: HTMLHRElement | HTMLDivElement,\r\n        parent: Menu,\r\n        height: number,\r\n        target: EventTarget | null,\r\n    ) {\r\n        this.element = element;\r\n        this.parent = parent;\r\n        this.height = height;\r\n        this.target = target;\r\n\r\n\r\n        this.element.addEventListener('click', (e) =>\r\n            this.onMouseClick(e as MouseEvent),\r\n        );\r\n        this.element.addEventListener('mouseenter', (e) =>\r\n            this.onMouseEnter(e as MouseEvent),\r\n        );\r\n    }\r\n\r\n    // static function wrapper to create a MenuItem object from a ContextMenuItemInterface object\r\n    public static createMenuItem(\r\n        item: ContextMenuItemInterface,\r\n        parent: Menu,\r\n    ): MenuItem {\r\n        // early return for separators\r\n        if (item.type === 'separator') {\r\n            return new MenuItem(document.createElement('hr'), parent, 7, null);\r\n        }\r\n\r\n        // create base menu item div element and create menu item object from base div\r\n        const divElem = document.createElement('div');\r\n        divElem.classList.add('menu-item');\r\n        const self = new MenuItem(divElem, parent, 23, parent.target);\r\n\r\n        // create menu item label span\r\n        const menuItemName = document.createElement('span');\r\n        menuItemName.classList.add('menu-item-name');\r\n        // if it doesnt have a label, what is it?\r\n        // i guess a separator wont have a label, but other than that?\r\n        // should i add an early return case for this?\r\n        menuItemName.innerHTML = item.label ? item.label : '';\r\n\r\n        // create menu item key stroke span\r\n        const menuItemKey = document.createElement('span');\r\n        menuItemKey.classList.add('menu-item-key');\r\n\r\n        // append menu item elements to base menu item div\r\n        divElem.appendChild(menuItemName);\r\n        divElem.appendChild(menuItemKey);\r\n\r\n        // if it doesnt have a command it might be a submenu\r\n        if (item.command !== undefined) {\r\n            // add command data to menu item object\r\n            self.command = item.command;\r\n            self.commandDetail = item.commandDetail;\r\n\r\n            // if it has a command, it might have a keymap, so search for it\r\n            const keyStrokes = atom.keymaps.findKeyBindings({\r\n                command: item.command,\r\n            });\r\n\r\n            // if it has a keymap, add it to the item key span element\r\n            if (keyStrokes.length > 0) {\r\n                menuItemKey.innerHTML =\r\n                    keyStrokes[keyStrokes.length - 1].keystrokes;\r\n            }\r\n        }\r\n\r\n        if (item.submenu !== undefined) {\r\n            divElem.classList.add('has-submenu');\r\n            self.submenuItems = item.submenu;\r\n        }\r\n\r\n        return self;\r\n    }\r\n\r\n    // on click, execute command and hide the context menu\r\n    private onMouseClick(e: MouseEvent) {\r\n        e.stopPropagation();\r\n        if (this.hasCommand()) {\r\n            this.execCommand();\r\n            this.parent.deleteContextMenu();\r\n        }\r\n    }\r\n\r\n    public hasCommand(): boolean {\r\n        return this.command !== undefined;\r\n    }\r\n\r\n    // on mouse enter, open submenu and set as selected\r\n    private onMouseEnter(e: MouseEvent) {\r\n        e.stopPropagation();\r\n        this.selected = true;\r\n        this.parent.unselectAll();\r\n        this.element.classList.add('selected');\r\n        if (this.submenuItems) {\r\n            if (!this.submenu) {\r\n                let position = this.element.getBoundingClientRect();\r\n                let fakeEvent = {\r\n                    ...e,\r\n                    target: this.target,\r\n                    clientX: position.left + 300,\r\n                    clientY: position.top,\r\n                    isSubmenu: true,\r\n                };\r\n                this.submenu = new Menu(fakeEvent, this.submenuItems, false);\r\n                this.submenu.setVisible(true);\r\n            } else {\r\n                this.submenu.setVisible(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    public unselect() {\r\n        this.selected = false;\r\n        this.element.classList.remove('selected');\r\n        this.submenu?.setVisible(false);\r\n    }\r\n\r\n    private async execCommand(): Promise<void> {\r\n\r\n        if (!this.hasCommand()) {\r\n            return;\r\n        }\r\n\r\n        let target =\r\n            this.target ||\r\n            (atom.workspace.getActiveTextEditor() as any)?.getElement() ||\r\n            (atom.workspace.getActivePane() as any).getElement();\r\n\r\n        await (atom.commands as any).dispatch(\r\n            target,\r\n            this.command,\r\n            this.commandDetail,\r\n        );\r\n    }\r\n\r\n    public getElement(): HTMLElement {\r\n        return this.element;\r\n    }\r\n\r\n    public getHeight(): number {\r\n        return this.height;\r\n    }\r\n}\r\n", "import { MenuItem } from './MenuItem';\r\nimport { TCMHandler } from './main';\r\nimport { ContextMenuItemInterface, MousePosition } from './types';\r\n\r\nexport class Menu {\r\n\tprivate visible: boolean = true;\r\n\tprivate children: MenuItem[] = [];\r\n\tprivate domElement: HTMLElement;\r\n\tpublic target: EventTarget | null;\r\n\r\n\tconstructor(\r\n\t\te: MousePosition,\r\n\t\titems: ContextMenuItemInterface[],\r\n\t\tvisible: boolean,\r\n\t) {\r\n\t\tthis.target = e.target;\r\n\r\n\t\tthis.domElement = document.createElement('div');\r\n\t\tthis.domElement.classList.add('submenu');\r\n\r\n\t\tif (!visible) {\r\n\t\t\tthis.visible = false;\r\n\t\t\tthis.domElement.classList.add('invisible');\r\n\t\t}\r\n\r\n\t\t// add context menu items to context menu\r\n\t\titems.forEach((element) => {\r\n\t\t\tthis.addItem(element);\r\n\t\t});\r\n\r\n\r\n\t\t// move context menu position to mouse event position\r\n\t\tthis.domElement.setAttribute('style', this.getPositionStyleString(e));\r\n\r\n\t\tTCMHandler.addMenu(this.domElement);\r\n\t}\r\n\r\n\tpublic unselectAll() {\r\n\t\tthis.children.forEach((item) => item.unselect());\r\n\t}\r\n\r\n\tpublic deleteContextMenu() {\r\n\t\tTCMHandler.deleteContextMenu();\r\n\t}\r\n\r\n\tpublic setVisible(v: boolean) {\r\n\t\tthis.visible = v;\r\n\t\tif (v) {\r\n\t\t\tthis.domElement.classList.remove('invisible');\r\n\t\t} else {\r\n\t\t\tthis.domElement.classList.add('invisible');\r\n\t\t\tthis.unselectAll();\r\n\t\t}\r\n\t}\r\n\r\n\t// generates a style string that positions the context menu next to\r\n\t// mouse event, while also preventing it from overflowing\r\n\tprivate getPositionStyleString(e: MousePosition): string {\r\n\t\tlet x1 = e.clientX + (!e.isSubmenu ? 10 : 0);\r\n\t\tlet y1 = e.clientY + (!e.isSubmenu ? 5 : 0);\r\n\r\n\t\tlet x2 = Math.min(x1, window.innerWidth - 310);\r\n\t\tlet y2 = Math.min(y1, window.innerHeight - this.getHeight() - 10);\r\n\r\n\t\tif (e.isSubmenu) {\r\n\t\t\tif (x1 !== x2) {\r\n\t\t\t\tlet altx1 = e.clientX - 600;\r\n\t\t\t\tlet altx2 = Math.max(altx1, 0);\r\n\t\t\t\tif (altx1 === altx2) {\r\n\t\t\t\t\tx2 = altx1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tx2 = Math.max(0, x2)\r\n\t\ty2 = Math.max(10, y2) / window.innerHeight * 100\r\n\r\n\t\treturn 'top:' + y2 + '%; left:' + x2 + 'px';\r\n\t}\r\n\r\n\t// adds a context menu item to context menu\r\n\tprivate addItem(item: ContextMenuItemInterface): void {\r\n\t\tconst mitem = MenuItem.createMenuItem(item, this);\r\n\t\tthis.children.push(mitem);\r\n\t\tthis.domElement.appendChild(mitem.getElement());\r\n\t}\r\n\r\n\t// calculate context menu height for positioning function\r\n\tprivate getHeight(): number {\r\n\t\tif (this.children.length === 0) {\r\n\t\t\treturn 0\r\n\t\t}\r\n\r\n\t\treturn this.children\r\n\t\t\t.map((item) => item.getHeight())\r\n\t\t\t.reduce(function(a, b) {\r\n\t\t\t\treturn a + b;\r\n\t\t\t});\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tTCMHandler.removeMenu(this.domElement);\r\n\t}\r\n}\r\n", "import { Menu } from './Menu';\r\nimport { ContextMenuItemInterface, MousePosition } from './types';\r\n\r\nexport class ThemedContextMenu {\r\n\tprivate hijackedFunction: Function | undefined;\r\n\tprivate container: HTMLElement;\r\n\r\n\tconstructor() {\r\n\t\t// add click listener to clear the context menu\r\n\t\t// document.addEventListener('click', (e) =>\r\n\t\t// \tthis.onMouseClick(e as MouseEvent),\r\n\t\t// );\r\n\r\n\t\t// create the context menu, but make it invisible\r\n\t\tthis.container = document.createElement('div');\r\n\t\tthis.container.classList.add('themed-context-menu');\r\n\t\t// this.activeContextMenu.classList.add('invisible');\r\n\r\n\t\tlet aws = document.querySelector('atom-workspace');\r\n\t\taws ?.appendChild(this.container);\r\n\t}\r\n\r\n\t// hijack context menu event function\r\n\thijackFunction() {\r\n\t\tlet contextMenuManager = atom.contextMenu as any;\r\n\t\tthis.hijackedFunction = contextMenuManager.showForEvent;\r\n\t\tcontextMenuManager.showForEvent = (e) => {\r\n\t\t\tlet data = contextMenuManager.templateForEvent(e);\r\n\t\t\tthis.displayContextMenu(e, data);\r\n\t\t};\r\n\t}\r\n\r\n\t// release context menu event function\r\n\treleaseFunction() {\r\n\t\tlet contextMenuManager = atom.contextMenu as any;\r\n\t\tcontextMenuManager.showForEvent = this.hijackedFunction;\r\n\t}\r\n\r\n\tdisplayContextMenu(e: MousePosition, items: ContextMenuItemInterface[]) {\r\n\t\tthis.deleteContextMenu();\r\n\r\n\t\tif (items.length > 0) {\r\n\t\t\tnew Menu(e, items, true);\r\n\t\t}\r\n\t}\r\n\r\n\taddMenu(child: HTMLElement) {\r\n\t\tthis.container.appendChild(child);\r\n\t}\r\n\r\n\tremoveMenu(child: HTMLElement) {\r\n\t\tthis.container.removeChild(child);\r\n\t}\r\n\r\n\tprivate onMouseClick(e) {\r\n\t\tthis.deleteContextMenu();\r\n\t}\r\n\r\n\tdeleteContextMenu() {\r\n\t\twhile (this.container.firstChild) {\r\n\t\t\tthis.container.removeChild(this.container.firstChild);\r\n\t\t}\r\n\t}\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
